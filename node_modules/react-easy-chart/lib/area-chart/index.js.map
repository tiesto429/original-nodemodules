{"version":3,"sources":["../../modules/area-chart/index.js"],"names":["dateParser","AreaChart","data","PropTypes","array","isRequired","width","number","height","xType","string","yType","datePattern","interpolate","style","object","margin","axes","bool","grid","verticalGrid","xDomainRange","yDomainRange","areaColors","noAreaGradient","tickTimeDisplayFormat","yTicks","xTicks","dataPoints","axisLabels","shape","x","y","yAxisOrientRight","mouseOverHandler","func","mouseOutHandler","mouseMoveHandler","clickHandler","props","uid","ref","refs","areaChart","m","w","h","node","setAttribute","left","right","top","bottom","append","attr","root","label","axis","scale","orient","tickFormat","format","tickSize","tickPadding","ticks","group","call","text","colors","forEach","color","i","gradient","fill","xValue","yValue","getFill","d","getStroke","areaPath","area","y0","y1","linePath","line","selectAll","enter","calculateDate","v","parseDate","calculateCX","calculateCY","mouseover","mouseout","mousemove","click","item","datum","on","scope","axisStyles","rules","datePatternParser","concat","createSvgNode","createSvgRoot","hasFill","p","calculateChartParameters","createXAxis","createYAxis","createFill","createAreaPathChart","createPoints","className","createStyle","toReact","Component"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\nimport { createElement } from 'react-faux-dom';\nimport {\n  createUniqueID,\n  reduce,\n  createValueGenerator,\n  calculateMargin,\n  createDomainRangeGenerator,\n  defaultColors,\n  defaultStyles,\n  getAxisStyles,\n  createCircularTicks\n} from '../shared';\nimport {\n  event as lastEvent,\n  select,\n  svg,\n  time } from 'd3';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\nimport { timeParse as parse } from 'd3-time-format';\n\nconst dateParser = {};\n\nexport default class AreaChart extends React.Component {\n  static get propTypes() {\n    return {\n      data: React.PropTypes.array.isRequired,\n      width: React.PropTypes.number,\n      height: React.PropTypes.number,\n      xType: React.PropTypes.string,\n      yType: React.PropTypes.string,\n      datePattern: React.PropTypes.string,\n      interpolate: React.PropTypes.string,\n      style: React.PropTypes.object,\n      margin: React.PropTypes.object,\n      axes: React.PropTypes.bool,\n      grid: React.PropTypes.bool,\n      verticalGrid: React.PropTypes.bool,\n      xDomainRange: React.PropTypes.array,\n      yDomainRange: React.PropTypes.array,\n      areaColors: React.PropTypes.array,\n      noAreaGradient: React.PropTypes.bool,\n      tickTimeDisplayFormat: React.PropTypes.string,\n      yTicks: React.PropTypes.number,\n      xTicks: React.PropTypes.number,\n      dataPoints: React.PropTypes.bool,\n      axisLabels: React.PropTypes.shape({\n        x: React.PropTypes.string,\n        y: React.PropTypes.string\n      }),\n      yAxisOrientRight: React.PropTypes.bool,\n      mouseOverHandler: React.PropTypes.func,\n      mouseOutHandler: React.PropTypes.func,\n      mouseMoveHandler: React.PropTypes.func,\n      clickHandler: React.PropTypes.func\n    };\n  }\n\n  static get defaultProps() {\n    return {\n      width: 200,\n      height: 150,\n      datePattern: '%d-%b-%y',\n      interpolate: 'linear',\n      axes: false,\n      areaColors: [],\n      xType: 'linear',\n      yType: 'linear',\n      axisLabels: {\n        x: '',\n        y: ''\n      },\n      mouseOverHandler: () => {},\n      mouseOutHandler: () => {},\n      mouseMoveHandler: () => {},\n      clickHandler: () => {}\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID(props);\n  }\n\n  componentDidMount() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  componentDidUpdate() {\n    const ref = this.refs.areaChart;\n    createCircularTicks(ref);\n  }\n\n  createSvgNode({ m, w, h }) {\n    const node = createElement('svg');\n    node.setAttribute('width', w + m.left + m.right);\n    node.setAttribute('height', h + m.top + m.bottom);\n    return node;\n  }\n\n  createSvgRoot({ node, m }) {\n    return select(node)\n      .append('g')\n      .attr('transform', `translate(${m.left}, ${m.top})`);\n  }\n\n  createXAxis({ root, m, w, h, x }) {\n    const {\n      xType,\n      axisLabels: { x: label },\n      xTicks,\n      grid,\n      verticalGrid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(x)\n      .orient('bottom');\n\n    if (xType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(time.format(tickTimeDisplayFormat));\n    }\n    if (grid && verticalGrid) {\n      axis\n        .tickSize(-h, 6)\n        .tickPadding(15);\n    } else {\n      axis\n        .tickSize(0)\n        .tickPadding(15);\n    }\n\n    if (xTicks) {\n      axis\n        .ticks(xTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', `translate(0, ${h})`);\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('x',\n          (yAxisOrientRight)\n            ? 0\n            : w)\n        .attr('y', m.bottom - 10)\n        .style('text-anchor',\n          (yAxisOrientRight)\n            ? 'start'\n            : 'end')\n        .text(label);\n    }\n    return axis;\n  }\n\n  createYAxis({ root, m, w, y }) {\n    const {\n      yType,\n      axisLabels: { y: label },\n      yTicks,\n      grid,\n      tickTimeDisplayFormat,\n      yAxisOrientRight\n    } = this.props;\n\n    const axis = svg.axis()\n      .scale(y)\n      .orient(yAxisOrientRight ? 'right' : 'left');\n\n    if (yType === 'time' && tickTimeDisplayFormat) {\n      axis\n        .tickFormat(time.format(tickTimeDisplayFormat));\n    }\n\n    if (grid) {\n      axis\n        .tickSize(-w, 6)\n        .tickPadding(12);\n    } else {\n      axis\n        .tickPadding(10);\n    }\n\n    if (yTicks) {\n      axis\n        .ticks(yTicks);\n    }\n\n    const group = root\n      .append('g')\n      .attr('class', 'y axis')\n      .attr('transform',\n        (yAxisOrientRight)\n          ? `translate(${w}, 0)`\n          : 'translate(0, 0)');\n\n    group\n      .call(axis);\n\n    if (label) {\n      group\n        .append('text')\n        .attr('class', 'label')\n        .attr('transform', 'rotate(-90)')\n        .attr('x', 0)\n        .attr('y',\n          (yAxisOrientRight)\n            ? -20 + m.right\n            : 0 - m.left)\n        .attr('dy', '.9em')\n        .style('text-anchor', 'end')\n        .text(label);\n    }\n\n    return axis;\n  }\n\n  createFill({ node, colors }) {\n    const uid = this.uid;\n\n    colors.forEach((color, i) => {\n      const gradient = select(node)\n        .append('defs')\n        .append('linearGradient')\n        .attr('id', `gradient-${i}-${uid}`)\n        .attr('x1', '0%')\n        .attr('x2', '0%')\n        .attr('y1', '40%')\n        .attr('y2', '100%');\n\n      defaultStyles[`.dot${i}`] = { fill: color };\n\n      gradient\n        .append('stop')\n        .attr('offset', '0%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.6`);\n\n      gradient\n        .append('stop')\n        .attr('offset', '100%')\n        .attr('style', `stop-color:${color}; stop-opacity:0.4`);\n    });\n  }\n\n  createAreaPathChart({ root, h, x, y, xValue, yValue, colors }) {\n    const {\n      data,\n      interpolate,\n      noAreaGradient\n    } = this.props;\n\n    const uid = this.uid;\n\n    const getFill = (d, i) => (\n      (noAreaGradient)\n        ? colors[i]\n        : `url(#gradient-${i}-${uid})`\n    );\n\n    const getStroke = (d, i) => colors[i];\n\n    const areaPath = svg.area()\n      .interpolate(interpolate)\n      .x((d) => x(xValue(d)))\n      .y0(h)\n      .y1((d) => y(yValue(d)));\n\n    const linePath = svg.line()\n      .interpolate(interpolate)\n      .x((d) => x(xValue(d)))\n      .y((d) => y(yValue(d)));\n\n    const group = root\n      .append('g')\n      .attr('class', 'areaChart');\n\n    group\n      .selectAll('path.area')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'area')\n      .style('fill', getFill)\n      .attr('d', areaPath);\n\n    group\n      .selectAll('path.line')\n      .data(data)\n      .enter()\n      .append('path')\n      .attr('class', 'line')\n      .style('stroke', getStroke)\n      .attr('d', linePath);\n  }\n\n  createPoints({ root, x, y, colors }) {\n    const {\n      data,\n      xType,\n      yType,\n      mouseOverHandler,\n      mouseOutHandler,\n      mouseMoveHandler,\n      clickHandler\n    } = this.props;\n\n    /*\n     * We don't really need to do this, but it\n     * avoids obscure \"this\" below\n     */\n    const calculateDate = (v) => this.parseDate(v);\n\n    const getStroke = (d, i) => colors[i];\n\n    /*\n     * Creating the calculation functions\n     */\n    const calculateCX = (d) => (\n      (xType === 'time')\n        ? x(calculateDate(d.x))\n        : x(d.x));\n\n    const calculateCY = (d) => (\n      (yType === 'time')\n        ? y(calculateDate(d.y))\n        : y(d.y));\n\n    const mouseover = (d) => mouseOverHandler(d, lastEvent);\n    const mouseout = (d) => mouseOutHandler(d, lastEvent);\n    const mousemove = (d) => mouseMoveHandler(d, lastEvent);\n    const click = (d) => clickHandler(d, lastEvent);\n\n    const group = root\n      .append('g')\n      .attr('class', 'dataPoints');\n\n    data.forEach((item) => {\n      item.forEach((d) => {\n        /*\n         * Applying the calculation functions\n         */\n        group\n          .datum(d)\n          .append('circle')\n          .attr('class', 'data-point')\n          .style('strokeWidth', '2px')\n          .style('stroke', getStroke)\n          .style('fill', 'white')\n          .attr('cx', calculateCX)\n          .attr('cy', calculateCY)\n          .on('mouseover', mouseover)\n          .on('mouseout', mouseout)\n          .on('mousemove', mousemove)\n          .on('click', click);\n      });\n    });\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      verticalGrid,\n      yAxisOrientRight,\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.area-chart-${uid}`;\n    const axisStyles = getAxisStyles(grid, verticalGrid, yAxisOrientRight);\n    const rules = merge({}, defaultStyles, style, axisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  parseDate(v) {\n    const {\n      datePattern\n    } = this.props;\n\n    const datePatternParser = (\n      dateParser[datePattern] || (\n      dateParser[datePattern] = parse(datePattern)));\n\n    return datePatternParser(v);\n  }\n\n  calculateChartParameters() {\n    const {\n      data,\n      xType,\n      yType,\n      axes,\n      xDomainRange,\n      yDomainRange,\n      yAxisOrientRight,\n      areaColors,\n      margin,\n      width,\n      height\n    } = this.props;\n\n    /*\n     * We could \"bind\"!\n     */\n    const parseDate = (v) => this.parseDate(v);\n\n    /*\n     * 'w' and 'h' are the width and height of the graph canvas\n     * (excluding axes and other furniture)\n     */\n    const m = calculateMargin(axes, margin, yAxisOrientRight);\n    const w = reduce(width, m.left, m.right);\n    const h = reduce(height, m.top, m.bottom);\n\n    const x = createDomainRangeGenerator('x', xDomainRange, data, xType, w, parseDate);\n    const y = createDomainRangeGenerator('y', yDomainRange, data, yType, h, parseDate);\n\n    const xValue = createValueGenerator('x', xType, parseDate);\n    const yValue = createValueGenerator('y', yType, parseDate);\n\n    const colors = areaColors.concat(defaultColors);\n\n    const node = this.createSvgNode({ m, w, h });\n    const root = this.createSvgRoot({ node, m });\n\n    return {\n      m,\n      w,\n      h,\n      x,\n      y,\n      xValue,\n      yValue,\n      colors,\n      node,\n      root\n    };\n  }\n\n  render() {\n    const {\n      axes,\n      dataPoints,\n      noAreaGradient\n    } = this.props;\n\n    const hasFill = !noAreaGradient;\n    const p = this.calculateChartParameters();\n\n    if (axes) {\n      this.createXAxis(p);\n\n      this.createYAxis(p);\n    }\n\n    if (hasFill) {\n      this.createFill(p);\n    }\n\n    this.createAreaPathChart(p);\n\n    if (dataPoints) {\n      this.createPoints(p);\n    }\n\n    const uid = this.uid;\n    const className = `area-chart-${uid}`;\n    const {\n      node\n    } = p;\n\n    return (\n      <div ref=\"areaChart\" className={className}>\n        {this.createStyle()}\n        {node.toReact()}\n      </div>\n    );\n  }\n}\n"]}