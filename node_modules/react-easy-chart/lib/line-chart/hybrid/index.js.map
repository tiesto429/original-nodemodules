{"version":3,"sources":["../../../modules/line-chart/hybrid/index.js"],"names":["LineChart","props","uid","chart","refs","initialise","transition","style","grid","vGrid","hGrid","orient","scope","defaultAxisStyles","rules","width","height","className","createStyle","Component","propTypes","data","PropTypes","array","isRequired","axes","bool","type","string","xType","yType","interpolate","margin","shape","top","number","right","bottom","left","colors","strokeWidth","stroke","object","xLabel","yLabel","xDomain","yDomain","pattern","xPattern","yPattern","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAKA;;AACA;;;;AAEA;;;;;;IAEqBA,S;;;AACnB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,mHACXA,KADW;;AAEjB,UAAKC,GAAL,GAAW,6BAAX;AAFiB;AAGlB;;;;wCAEmB;AAAA,UAEhBC,KAFgB,GAGd,KAAKC,IAHS,CAEhBD,KAFgB;;;AAKlB,UAAMF,QAAQ,KAAKA,KAAnB;;AAEA,0BAAUI,UAAV,CAAqBF,KAArB,EAA4BF,KAA5B;AACD;;;yCAEoB;AAAA,UAEjBE,KAFiB,GAGf,KAAKC,IAHU,CAEjBD,KAFiB;;;AAKnB,UAAMF,QAAQ,KAAKA,KAAnB;;AAEA,0BAAUK,UAAV,CAAqBH,KAArB,EAA4BF,KAA5B;AACD;;;kCAEa;AAAA,mBAOR,KAAKA,KAPG;AAAA,UAEVM,KAFU,UAEVA,KAFU;AAAA,UAGVC,IAHU,UAGVA,IAHU;AAAA,UAIVC,KAJU,UAIVA,KAJU;AAAA,UAKVC,KALU,UAKVA,KALU;AAAA,UAMVC,MANU,UAMVA,MANU;;;AASZ,UAAMT,MAAM,KAAKA,GAAjB;AACA,UAAMU,yBAAuBV,GAA7B;AACA,UAAMW,oBAAoB,kCAAqBJ,SAASD,IAA9B,EAAoCE,SAASF,IAA7C,EAAmDG,MAAnD,CAA1B;AACA,UAAMG,QAAQ,sBAAM,EAAN,yBAAyBP,KAAzB,EAAgCM,iBAAhC,CAAd;;AAEA,aACE;AACE,uBAAeD,KADjB;AAEE,eAAOE;AAFT,QADF;AAMD;;;6BAEQ;AAAA,oBAIH,KAAKb,KAJF;AAAA,UAELc,KAFK,WAELA,KAFK;AAAA,UAGLC,MAHK,WAGLA,MAHK;;;AAMP,UAAMd,MAAM,KAAKA,GAAjB;AACA,UAAMe,4BAA0Bf,GAAhC;;AAEA,aACE;AAAA;AAAA,UAAK,KAAI,WAAT,EAAqB,WAAWe,SAAhC;AACG,aAAKC,WAAL,EADH;AAEE,+CAAK,KAAI,OAAT,EAAiB,OAAOH,KAAxB,EAA+B,QAAQC,MAAvC;AAFF,OADF;AAMD;;;EA/DoC,gBAAMG,S;;kBAAxBnB,S;;;AAkErBA,UAAUoB,SAAV,GAAsB;AACpBC,QAAM,gBAAMC,SAAN,CAAgBC,KAAhB,CAAsBC,UADR;AAEpBC,QAAM,gBAAMH,SAAN,CAAgBI,IAFF;AAGpBlB,QAAM,gBAAMc,SAAN,CAAgBI,IAHF;AAIpBhB,SAAO,gBAAMY,SAAN,CAAgBI,IAJH;AAKpBjB,SAAO,gBAAMa,SAAN,CAAgBI,IALH;AAMpBC,QAAM,gBAAML,SAAN,CAAgBM,MANF;AAOpBC,SAAO,gBAAMP,SAAN,CAAgBM,MAPH;AAQpBE,SAAO,gBAAMR,SAAN,CAAgBM,MARH;AASpBG,eAAa,gBAAMT,SAAN,CAAgBM,MATT;AAUpBI,UAAQ,gBAAMV,SAAN,CAAgBW,KAAhB,CAAsB;AAC5BC,SAAK,gBAAMZ,SAAN,CAAgBa,MADO;AAE5BC,WAAO,gBAAMd,SAAN,CAAgBa,MAFK;AAG5BE,YAAQ,gBAAMf,SAAN,CAAgBa,MAHI;AAI5BG,UAAM,gBAAMhB,SAAN,CAAgBa;AAJM,GAAtB,CAVY;AAgBpBpB,SAAO,gBAAMO,SAAN,CAAgBa,MAhBH;AAiBpBnB,UAAQ,gBAAMM,SAAN,CAAgBa,MAjBJ;AAkBpBxB,UAAQ,gBAAMW,SAAN,CAAgBM,MAlBJ;AAmBpBW,UAAQ,gBAAMjB,SAAN,CAAgBC,KAnBJ;AAoBpBiB,eAAa,gBAAMlB,SAAN,CAAgBa,MApBT;AAqBpBM,UAAQ,gBAAMnB,SAAN,CAAgBoB,MArBJ;AAsBpBnC,SAAO,gBAAMe,SAAN,CAAgBoB,MAtBH;AAuBpBC,UAAQ,gBAAMrB,SAAN,CAAgBM,MAvBJ;AAwBpBgB,UAAQ,gBAAMtB,SAAN,CAAgBM,MAxBJ;AAyBpBiB,WAAS,gBAAMvB,SAAN,CAAgBC,KAzBL;AA0BpBuB,WAAS,gBAAMxB,SAAN,CAAgBC,KA1BL;AA2BpBwB,WAAS,gBAAMzB,SAAN,CAAgBM,MA3BL;AA4BpBoB,YAAU,gBAAM1B,SAAN,CAAgBM,MA5BN;AA6BpBqB,YAAU,gBAAM3B,SAAN,CAAgBM;AA7BN,CAAtB;;AAgCA5B,UAAUkD,YAAV,GAAyB;AACvBvB,QAAM,QADiB;AAEvBE,SAAO,QAFgB;AAGvBC,SAAO,QAHgB;AAIvBC,eAAa,QAJU;AAKvBC,UAAQ;AACNE,SAAK,CADC;AAENE,WAAO,CAFD;AAGNC,YAAQ,CAHF;AAINC,UAAM;AAJA,GALe;AAWvB3B,UAAQ,MAXe;AAYvB4B,UAAQ,EAZe;AAavBC,eAAa,CAbU;AAcvBjC,SAAO;AAdgB,CAAzB","file":"index.js","sourcesContent":["import React from 'react';\nimport {\n  createUniqueID,\n  defaultStyles,\n  getDefaultAxisStyles\n} from './LineChart/common';\nimport { Style } from 'radium';\nimport merge from 'lodash.merge';\n\nimport lineChart from './LineChart';\n\nexport default class LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.uid = createUniqueID();\n  }\n\n  componentDidMount() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.initialise(chart, props);\n  }\n\n  componentDidUpdate() {\n    const {\n      chart\n    } = this.refs;\n\n    const props = this.props;\n\n    lineChart.transition(chart, props);\n  }\n\n  createStyle() {\n    const {\n      style,\n      grid,\n      vGrid,\n      hGrid,\n      orient\n    } = this.props;\n\n    const uid = this.uid;\n    const scope = `.line-chart-${uid}`;\n    const defaultAxisStyles = getDefaultAxisStyles(vGrid || grid, hGrid || grid, orient);\n    const rules = merge({}, defaultStyles, style, defaultAxisStyles);\n\n    return (\n      <Style\n        scopeSelector={scope}\n        rules={rules}\n      />\n    );\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n\n    const uid = this.uid;\n    const className = `line-chart-${uid}`;\n\n    return (\n      <div ref=\"lineChart\" className={className}>\n        {this.createStyle()}\n        <svg ref=\"chart\" width={width} height={height} />\n      </div>\n    );\n  }\n}\n\nLineChart.propTypes = {\n  data: React.PropTypes.array.isRequired,\n  axes: React.PropTypes.bool,\n  grid: React.PropTypes.bool,\n  hGrid: React.PropTypes.bool,\n  vGrid: React.PropTypes.bool,\n  type: React.PropTypes.string,\n  xType: React.PropTypes.string,\n  yType: React.PropTypes.string,\n  interpolate: React.PropTypes.string,\n  margin: React.PropTypes.shape({\n    top: React.PropTypes.number,\n    right: React.PropTypes.number,\n    bottom: React.PropTypes.number,\n    left: React.PropTypes.number\n  }),\n  width: React.PropTypes.number,\n  height: React.PropTypes.number,\n  orient: React.PropTypes.string,\n  colors: React.PropTypes.array,\n  strokeWidth: React.PropTypes.number,\n  stroke: React.PropTypes.object,\n  style: React.PropTypes.object,\n  xLabel: React.PropTypes.string,\n  yLabel: React.PropTypes.string,\n  xDomain: React.PropTypes.array,\n  yDomain: React.PropTypes.array,\n  pattern: React.PropTypes.string,\n  xPattern: React.PropTypes.string,\n  yPattern: React.PropTypes.string\n};\n\nLineChart.defaultProps = {\n  type: 'linear',\n  xType: 'linear',\n  yType: 'linear',\n  interpolate: 'linear',\n  margin: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n  orient: 'left',\n  colors: [],\n  strokeWidth: 2,\n  style: {}\n};\n"]}