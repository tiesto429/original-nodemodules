'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports.isJSONfile = isJSONfile;
exports.transformJSONtoSass = transformJSONtoSass;
exports.parseValue = parseValue;
exports.parseList = parseList;
exports.parseMap = parseMap;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _lodash = require('lodash');

var _lodash2 = _interopRequireDefault(_lodash);

var _path = require('path');

var _isThere = require('is-there');

var _isThere2 = _interopRequireDefault(_isThere);

exports['default'] = function (url, prev) {
  if (!isJSONfile(url)) {
    return null;
  }

  var includePaths = this.options.includePaths ? this.options.includePaths.split(':') : [];
  var paths = [].concat(prev.slice(0, prev.lastIndexOf('/'))).concat(includePaths);

  var file = paths.map(function (path) {
    return (0, _path.resolve)(path, url);
  }).filter(_isThere2['default']).pop();

  if (!file) {
    return new Error('Unable to find "' + url + '" from the following path(s): ' + paths.join(', ') + '. Check includePaths.');
  }

  // Prevent file from being cached by Node's `require` on continuous builds.
  // https://github.com/Updater/node-sass-json-importer/issues/21
  delete require.cache[require.resolve(file)];

  return {
    contents: transformJSONtoSass(require(file))
  };
};

function isJSONfile(url) {
  return (/\.json$/.test(url)
  );
}

function transformJSONtoSass(json) {
  return Object.keys(json).map(function (key) {
    return '$' + key + ': ' + parseValue(json[key]) + ';';
  }).join('\n');
}

function parseValue(value) {
  if (_lodash2['default'].isArray(value)) {
    return parseList(value);
  } else if (_lodash2['default'].isPlainObject(value)) {
    return parseMap(value);
  } else {
    return value;
  }
}

function parseList(list) {
  return '(' + list.map(function (value) {
    return parseValue(value);
  }).join(',') + ')';
}

function parseMap(map) {
  return '(' + Object.keys(map).map(function (key) {
    return key + ': ' + parseValue(map[key]);
  }).join(',') + ')';
}

// Super-hacky: Override Babel's transpiled export to provide both
// a default CommonJS export and named exports.
// Fixes: https://github.com/Updater/node-sass-json-importer/issues/32
// TODO: Remove in 3.0.0. Upgrade to Babel6.
module.exports = exports['default'];
Object.keys(exports).forEach(function (key) {
  return module.exports[key] = exports[key];
});
